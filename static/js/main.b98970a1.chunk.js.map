{"version":3,"sources":["components/ScoreView/styledComponents.js","components/ScoreView/index.js","components/GameResultsView/styledComponents.js","components/GameResultsView/index.js","components/RpsPage/styledComponents.js","components/RpsPage/index.js","App.js","index.js"],"names":["ScoreContainer","styled","div","ScoreNameContainer","ScoreName","h1","ScoreBoard","ScoreHeading","p","ScoreResult","ScoreView","props","score","GameViewContainer","GameButton","button","GameImage","img","ResultImageContainer","ResultName","ResultText","GameResultsView","choicesList","isShow","checkResult","newArray","text","restartGame","type","onClick","id","src","imageUrl","alt","className","MainContainer","RulesView","PopUpView","PopUpImage","RpsPage","state","getResult","item1","item2","setState","choice2","Math","floor","random","length","choice1","filter","eachValue","result","newScore","this","modal","trigger","close","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b98970a1.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const ScoreContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  width: 80%;\n  border-style: solid;\n  border-color: #ffffff;\n  border-width: 2px;\n  border-radius: 10px;\n  background-color: transparent;\n  margin-top: 2%;\n`\nexport const ScoreNameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nexport const ScoreName = styled.h1`\n  color: white;\n  font-size: 20px;\n  font-family: 'Bree Serif';\n  margin-top: 0px;\n  margin-bottom: 0px;\n  @media screen and (max-width: 576px) {\n    font-size: 14px;\n  }\n`\nexport const ScoreBoard = styled(ScoreNameContainer)`\n  background-color: white;\n  width: 15%;\n  height: 100%;\n  border-radius: 10px;\n  justify-content: center;\n  align-items: center;\n  @media screen and (max-width: 576px) {\n    width: 25%;\n  }\n`\nexport const ScoreHeading = styled.p`\n  color: #223a5f;\n  font-size: 20px;\n  margin-bottom: 0px;\n  @media screen and (max-width: 576px) {\n    font-size: 16px;\n  }\n`\nexport const ScoreResult = styled.p`\n  color: #223a5f;\n  font-size: 42px;\n  margin-top: 0px;\n  font-family: 'Roboto';\n  @media screen and (max-width: 576px) {\n    font-size: 24px;\n    margin-top: 10px;\n  }\n`\n","import {\n  ScoreContainer,\n  ScoreNameContainer,\n  ScoreName,\n  ScoreBoard,\n  ScoreHeading,\n  ScoreResult,\n} from './styledComponents'\n\nconst ScoreView = props => {\n  const {score} = props\n  return (\n    <ScoreContainer>\n      <ScoreNameContainer>\n        <ScoreName>\n          ROCK\n          <br /> PAPER <br /> SCISSORS\n        </ScoreName>\n      </ScoreNameContainer>\n      <ScoreBoard>\n        <ScoreHeading>Score</ScoreHeading>\n        <ScoreResult>{score}</ScoreResult>\n      </ScoreBoard>\n    </ScoreContainer>\n  )\n}\n\nexport default ScoreView\n","import styled from 'styled-components'\n\nexport const GameViewContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 400px;\n  flex-wrap: wrap;\n  margin-top: 60px;\n  @media screen and (max-width: 576px) {\n    width: 250px;\n    height: 250px;\n    margin-left: 15px;\n  }\n`\nexport const GameButton = styled.button`\n  width: 150px;\n  height: 150px;\n  background-color: transparent;\n  border-style: none;\n  outline: none;\n  @media screen and (max-width: 576px) {\n    width: 100px;\n    height: 100px;\n    margin-top: 0px;\n    margin-right: 20px;\n  }\n`\nexport const GameImage = styled.img`\n  width: 150px;\n  height: 150px;\n  @media screen and (max-width: 576px) {\n    width: 100px;\n    height: 100px;\n  }\n`\n\nexport const ResultImageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-right: 40px;\n  @media screen and (max-width: 576px) {\n    width: 30%;\n  }\n`\nexport const ResultName = styled.p`\n  color: white;\n  font-size: 20px;\n  @media screen and (max-width: 576px) {\n    font-size: 14px;\n  }\n`\nexport const ResultText = styled.p`\n  color: white;\n  font-size: 25px;\n  @media screen and (max-width: 576px) {\n    font-size: 16px;\n  }\n`\nexport const ResultButton = styled.button`\n  width: 100px;\n  height: 28px;\n  padding: 10px;\n  color: #223a5f;\n  font-size: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  border-style: none;\n  outline: none;\n`\n","import {\n  GameViewContainer,\n  GameButton,\n  GameImage,\n  ResultImageContainer,\n  ResultName,\n  ResultText,\n} from './styledComponents'\n\nimport './index.css'\n\nconst GameResultsView = props => {\n  const {choicesList, isShow, checkResult, newArray, text, restartGame} = props\n  const showGame = () => (\n    <GameViewContainer>\n      {isShow && (\n        <>\n          <GameButton\n            type=\"button\"\n            data-testid=\"rockButton\"\n            onClick={() => checkResult(choicesList[0].id)}\n          >\n            <GameImage\n              src={choicesList[0].imageUrl}\n              alt={choicesList[0].id}\n              key={choicesList[0].id}\n            />\n          </GameButton>\n          <GameButton\n            type=\"button\"\n            data-testid=\"scissorsButton\"\n            onClick={() => checkResult(choicesList[1].id)}\n          >\n            <GameImage\n              src={choicesList[1].imageUrl}\n              alt={choicesList[1].id}\n              key={choicesList[1].id}\n            />\n          </GameButton>\n          <GameButton\n            type=\"button\"\n            data-testid=\"paperButton\"\n            onClick={() => checkResult(choicesList[2].id)}\n          >\n            <GameImage\n              src={choicesList[2].imageUrl}\n              alt={choicesList[2].id}\n              key={choicesList[2].id}\n            />\n          </GameButton>\n        </>\n      )}\n      {!isShow && (\n        <>\n          <ResultImageContainer>\n            <ResultName>YOU</ResultName>\n            <GameImage src={newArray[0].imageUrl} alt=\"your choice\" />\n          </ResultImageContainer>\n          <ResultImageContainer>\n            <ResultName>OPPONENT</ResultName>\n            <GameImage src={newArray[1].imageUrl} alt=\"opponent choice\" />\n          </ResultImageContainer>\n          <ResultImageContainer>\n            <ResultText>{text}</ResultText>\n            <button\n              className=\"result-button\"\n              type=\"button\"\n              onClick={restartGame}\n            >\n              PLAY AGAIN\n            </button>\n          </ResultImageContainer>\n        </>\n      )}\n    </GameViewContainer>\n  )\n  return showGame()\n}\n\nexport default GameResultsView\n","import styled from 'styled-components'\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  background-color: #223a5f;\n  padding: 20px;\n`\nexport const RulesView = styled.div`\n  align-self: flex-end;\n  margin-top: auto;\n  @media screen and (max-width: 576px) {\n    margin-bottom: 40px;\n  }\n`\nexport const PopUpView = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 40vw;\n  justify-content: space-between;\n  padding: 10px;\n  @media screen and (max-width: 576px) {\n    height: 260px;\n    width: 100%;\n  }\n`\nexport const PopUpImage = styled.img`\n  width: 100%;\n  height: 90%;\n  margin-top: auto;\n`\n","import {Component} from 'react'\n\nimport Popup from 'reactjs-popup'\n\nimport 'reactjs-popup/dist/index.css'\n\nimport {RiCloseLine} from 'react-icons/ri'\n\nimport ScoreView from '../ScoreView'\n\nimport GameResultsView from '../GameResultsView'\n\nimport './index.css'\n\nimport {\n  MainContainer,\n  RulesView,\n  PopUpView,\n  PopUpImage,\n} from './styledComponents'\n\nconst choicesList = [\n  {\n    id: 'ROCK',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rock-image.png',\n  },\n  {\n    id: 'SCISSORS',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/scissor-image.png',\n  },\n  {\n    id: 'PAPER',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/paper-image.png',\n  },\n]\n\nclass RpsPage extends Component {\n  state = {\n    isShow: true,\n    newArray: [choicesList[0], choicesList[1]],\n    text: 'YOU WON',\n    score: 0,\n  }\n\n  getResult = (item1, item2) => {\n    if (item1.id === 'ROCK') {\n      switch (item2.id) {\n        case 'PAPER':\n          return 'YOU LOSE'\n        case 'SCISSORS':\n          return 'YOU WON'\n        default:\n          return 'IT IS DRAW'\n      }\n    } else if (item1.id === 'PAPER') {\n      switch (item2.id) {\n        case 'ROCK':\n          return 'YOU WON'\n        case 'SCISSORS':\n          return 'YOU LOSE'\n        default:\n          return 'IT IS DRAW'\n      }\n    } else {\n      switch (item2.id) {\n        case 'ROCK':\n          return 'YOU LOSE'\n        case 'PAPER':\n          return 'YOU WON'\n        default:\n          return 'IT IS DRAW'\n      }\n    }\n  }\n\n  restartGame = () => this.setState({isShow: true})\n\n  checkResult = id => {\n    const {score} = this.state\n    const choice2 = choicesList[Math.floor(Math.random() * choicesList.length)]\n    const choice1 = choicesList.filter(eachValue => eachValue.id === id)\n    const result = this.getResult(choice1[0], choice2)\n    let newScore = score\n    if (result === 'YOU WON') {\n      newScore = score + 1\n    } else if (result === 'YOU LOSE') {\n      newScore = score - 1\n    } else {\n      newScore = score\n    }\n    this.setState({\n      isShow: false,\n      newArray: [choice1[0], choice2],\n      text: result,\n      score: newScore,\n    })\n  }\n\n  render() {\n    const {isShow, newArray, text, score} = this.state\n    return (\n      <MainContainer>\n        <ScoreView score={score} />\n        <GameResultsView\n          choicesList={choicesList}\n          text={text}\n          isShow={isShow}\n          newArray={newArray}\n          checkResult={this.checkResult}\n          restartGame={this.restartGame}\n        />\n        <RulesView>\n          <Popup\n            modal\n            trigger={\n              <button type=\"button\" className=\"trigger-button\">\n                RULES\n              </button>\n            }\n          >\n            {close => (\n              <PopUpView>\n                <button\n                  type=\"button\"\n                  className=\"trigger-button-close\"\n                  onClick={() => close()}\n                >\n                  <RiCloseLine />\n                </button>\n                <PopUpImage\n                  src=\"https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rules-image.png\"\n                  alt=\"rules\"\n                />\n              </PopUpView>\n            )}\n          </Popup>\n        </RulesView>\n      </MainContainer>\n    )\n  }\n}\n\nexport default RpsPage\n","import RpsPage from './components/RpsPage'\n\nimport './App.css'\n\nconst App = () => <RpsPage />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}